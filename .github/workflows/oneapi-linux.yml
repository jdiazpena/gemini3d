name: oneapi-linux

env:
  CC: icx
  CXX: icpx
  FC: ifx
  LINUX_CPP_COMPONENTS: intel-oneapi-compiler-dpcpp-cpp-and-cpp-classic
  LINUX_FORTRAN_COMPONENTS: intel-oneapi-compiler-fortran
  LINUX_MKL_COMPONENTS: intel-oneapi-mkl intel-oneapi-mkl-devel
  LINUX_MPI_COMPONENTS: intel-oneapi-mpi intel-oneapi-mpi-devel
# https://github.com/oneapi-src/oneapi-ci/blob/master/.github/workflows/build_all.yml
  CTEST_NO_TESTS_ACTION: error

on:
  push:
    paths:
      - "**.cpp"
      - "**.f90"
      - "**.F90"
      - "**.cmake"
      - "cmake/libraries.json"
      - "CMakePresets.json"
      - "**/CMakeLists.txt"
      - "!cmake/gnu.cmake"
      - ".github/workflows/oneapi-linux.yml"
# paths ignore starting with "!"
      - "!docs/**"
      - "!**/cray.cmake"

jobs:

  linux:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    # strategy:
    #   matrix:
    #     hwm14: [true, false]

    steps:

    - uses: actions/checkout@v3
    # this must be before oneAPI script commands else the scripts do not exist on the image

    - name: cache install oneAPI
      id: cache-install
      uses: actions/cache@v3
      with:
        path: |
          /opt/intel/oneapi
        key: install-apt

    - name: non-cache install oneAPI
      if: steps.cache-install.outputs.cache-hit != 'true'
      timeout-minutes: 5
      run: |
        .github/workflows/oneapi_setup_apt_repo_linux.sh
        sudo apt install ${{ env.LINUX_FORTRAN_COMPONENTS }} ${{ env.LINUX_CPP_COMPONENTS }} ${{ env.LINUX_MPI_COMPONENTS }} ${{ env.LINUX_MKL_COMPONENTS }}

    - name: Setup Intel oneAPI environment
      run: |
        source /opt/intel/oneapi/setvars.sh
        printenv >> $GITHUB_ENV

    - name: install Ninja
      run: sudo apt install ninja-build
# install ninja needs to be own step as not cached by design

    - name: Checkout Gemini3D-External
      uses: actions/checkout@v3
      with:
        repository: gemini3d/external
        path: gemext

    - name: Install numeric libraries
      timeout-minutes: 15
      run: |
        cmake -S gemext -B gemext/build -Dfind:BOOL=true -DCMAKE_INSTALL_PREFIX=${{ runner.temp }}
        cmake --build gemext/build --parallel
        cmake --install gemext/build

    - uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: CMake Configure
      run: >-
        cmake
        --preset multi
        -DCMAKE_PREFIX_PATH:PATH=${{ runner.temp }}

    - name: DEBUG build
      run: cmake --build --preset debug
    - name: DEBUG unit test
      run: ctest --preset debug -L unit
    - name: DEBUG test core
      run: ctest --preset debug -LE unit -E 3d --repeat until-pass:2

    - name: RELEASE build
      run: cmake --build --preset release
    - name: RELEASE unit test
      run: ctest --preset release -L unit
    - name: RELEASE test core
      run: ctest --preset release -LE unit -E 3d

    - name: exclude unused files from cache
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: .github/workflows/oneapi_cache_exclude_linux.sh
